name: CI - Preview Application

on:
    push:
    pull_request:
        types:
            - opened
            - reopened

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: false

jobs:
    login:
        uses: ./.github/workflows/devopness-login.yml
        secrets: inherit
        # Required Secrets:
        # - DEVOPNESS_EMAIL
        # - DEVOPNESS_PASSWORD
        with:
            host: ${{ vars.DEVOPNESS_HOST }}

    store-token:
        needs: login
        runs-on: ubuntu-latest
        outputs:
            token: ${{ steps.read-token.outputs.token }}
        steps:
            - name: Download token artifact
              uses: actions/download-artifact@v4
              with:
                  name: devopness-token

            - name: Read token
              id: read-token
              run: echo "token=$(cat token.b64)" >> $GITHUB_OUTPUT

    create-application:
        needs: store-token
        uses: ./.github/workflows/devopness-request.yml
        with:
            host: ${{ vars.DEVOPNESS_HOST }}
            path: "/environments/${{vars.DEVOPNESS_ENVIRONMENT_ID}}/applications"
            method: POST
            token: ${{ needs.store-token.outputs.token }}
            data: |
                {
                  \"name\": \"pr-${{ github.event.number }}-preview\",
                  \"credential_id\": ${{ vars.DEVOPNESS_CREDENTIAL_ID }},
                  \"repository\": \"Diegiwg/Diegiwg\",
                  \"programming_language\": \"html\",
                  \"engine_version\": \"none\",
                  \"framework\": \"none\",
                  \"default_branch\": \"main\"
                }

    get-server:
        needs: store-token
        uses: ./.github/workflows/devopness-request.yml
        with:
            host: ${{ vars.DEVOPNESS_HOST }}
            path: "/servers/${{ vars.DEVOPNESS_SERVER_ID }}"
            method: GET
            token: ${{ needs.store-token.outputs.token }}

    parse-application-id:
        needs: create-application
        runs-on: ubuntu-latest
        outputs:
            APPLICATION_ID: ${{ steps.parse-id.outputs.APPLICATION_ID }}
        steps:
            - name: Parse application ID
              id: parse-id
              run: |
                  APP_ID=$(echo '${{ needs.create-application.outputs.response }}' | jq -r '.id')
                  echo "APPLICATION_ID=$APP_ID" >> $GITHUB_OUTPUT

    parse-server-ip:
        needs: get-server
        runs-on: ubuntu-latest
        outputs:
            SERVER_IP: ${{ steps.parse-ip.outputs.SERVER_IP }}
        steps:
            - name: Parse server IP
              id: parse-ip
              run: |
                  SERVER_IP=$(echo '${{ needs.get-server.outputs.response }}' | jq -r '.ip_address')
                  echo "SERVER_IP=$SERVER_IP" >> $GITHUB_OUTPUT

    create-virtual-host:
        needs: [store-token, parse-server-ip, parse-application-id]
        uses: ./.github/workflows/devopness-request.yml
        with:
            host: ${{ vars.DEVOPNESS_HOST }}
            path: "/environments/${{vars.DEVOPNESS_ENVIRONMENT_ID}}/virtual-hosts"
            method: POST
            token: ${{ needs.store-token.outputs.token }}
            data: |
                {
                  \"type\": \"ip-based\",
                  \"name\": \"${{ needs.parse-server-ip.outputs.SERVER_IP }}:6969\",
                  \"application_id\": \"${{ needs.parse-application-id.outputs.APPLICATION_ID }}\"
                }

    deploy-application:
        needs:
            [
                store-token,
                parse-application-id,
                parse-server-ip,
                create-virtual-host,
            ]
        runs-on: ubuntu-latest
        steps:
            - name: Get deploy pipeline
              id: get-pipeline
              uses: ./.github/workflows/devopness-request.yml
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/pipelines/application/${{ needs.parse-application-id.outputs.APPLICATION_ID }}"
                  method: GET
                  token: ${{ needs.store-token.outputs.token }}

            - name: Parse deploy pipeline id
              id: parse-pipeline
              run: |
                  PIPELINE_ID=$(echo '${{ steps.get-pipeline.outputs.response }}' | jq -r '.[0].id')
                  echo "PIPELINE_ID=$PIPELINE_ID" >> $GITHUB_OUTPUT

            - name: Deploy application
              uses: ./.github/workflows/devopness-request.yml
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/pipelines/${{ steps.parse-pipeline.outputs.PIPELINE_ID }}/actions"
                  method: POST
                  token: ${{ needs.store-token.outputs.token }}
                  data: |
                      {
                        \"operation\": \"deploy\",
                        \"source_ref\": \"master\",
                        \"source_type\": \"branch\"
                        \"servers\": [${{ needs.parse-server-ip.outputs.SERVER_IP }}]
                      }

    comment-on-pr:
        needs: [deploy-application, parse-server-ip]
        runs-on: ubuntu-latest
        steps:
            - name: Comment on PR with preview URL
              uses: actions/github-script@v6
              with:
                  script: |
                      const previewUrl = `http://${{ needs.parse-server-ip.outputs.SERVER_IP }}:6969`;
                      const commentBody = `âœ¨ OlÃ¡, sua aplicaÃ§Ã£o preview foi implantada com sucesso! ðŸš€\n\nAcesse a visualizaÃ§Ã£o aqui: [${previewUrl}](${previewUrl})\n\nTenha um Ã³timo dia! ðŸ˜ŠðŸ’»`;
                      github.rest.issues.createComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: commentBody
                      });
