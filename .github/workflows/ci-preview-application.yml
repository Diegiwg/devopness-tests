name: CI - Preview Application

on:
    pull_request:
        types:
            - opened
            - reopened

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: false

jobs:
    preview-application:
        name: Preview Application
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Login on Devopness
              uses: ./.github/actions/devopness-login
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  email: ${{ secrets.DEVOPNESS_EMAIL }}
                  password: ${{ secrets.DEVOPNESS_PASSWORD }}

            - name: Download Token artifact
              uses: actions/download-artifact@v4
              with:
                  name: devopness-token

            - name: Load the Token in Github Environment
              id: load-token
              run: echo "TOKEN=$(cat token.b64)" >> $GITHUB_OUTPUT

            - name: Clean up Token Artifact
              uses: geekyeggo/delete-artifact@v5
              with:
                  name: devopness-token

            - name: Create the Application
              id: create-application
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/environments/${{vars.DEVOPNESS_ENVIRONMENT_ID}}/applications"
                  method: POST
                  token: ${{ steps.load-token.outputs.TOKEN }}
                  data: |
                      {
                          \"name\": \"pr-${{ github.event.number }}-preview\",
                          \"credential_id\": ${{ vars.DEVOPNESS_CREDENTIAL_ID }},
                          \"repository\": \"Diegiwg/Diegiwg\",
                          \"programming_language\": \"html\",
                          \"engine_version\": \"none\",
                          \"framework\": \"none\",
                          \"default_branch\": \"main\"
                      }

            - name: Parse application ID
              id: parse-application-id
              run: |
                  APP_ID=$(echo '${{ steps.create-application.outputs.response }}' | jq -r '.id')
                  echo "APPLICATION_ID=$APP_ID" >> $GITHUB_OUTPUT

            - name: Get Server Data
              id: get-server
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/servers/${{ vars.DEVOPNESS_SERVER_ID }}"
                  method: GET
                  token: ${{ steps.load-token.outputs.TOKEN }}

            - name: Parse Server Data
              id: parse-server-data
              run: |
                  SERVER_ID=$(echo '${{ steps.get-server.outputs.response }}' | jq -r '.id')
                  echo "SERVER_ID=$SERVER_ID" >> $GITHUB_OUTPUT

                  SERVER_IP=$(echo '${{ steps.get-server.outputs.response }}' | jq -r '.ip_address')
                  echo "SERVER_IP=$SERVER_IP" >> $GITHUB_OUTPUT

            - name: Create the Virtual Host
              id: create-virtual-host
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/environments/${{vars.DEVOPNESS_ENVIRONMENT_ID}}/virtual-hosts"
                  method: POST
                  token: ${{ steps.load-token.outputs.TOKEN }}
                  data: |
                      {
                          \"type\": \"ip-based\",
                          \"name\": \"${{ steps.parse-server-data.outputs.SERVER_IP }}:6969\",
                          \"application_id\": \"${{ steps.parse-application-id.outputs.APPLICATION_ID }}\"
                      }

            - name: Get Application Deploy Pipeline
              id: get-deploy-pipeline
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/pipelines/application/${{ steps.parse-application-id.outputs.APPLICATION_ID }}"
                  method: GET
                  token: ${{ steps.load-token.outputs.TOKEN }}

            - name: Parse Application Deploy Pipeline ID
              id: parse-deploy-pipeline-id
              run: |
                  PIPELINE_ID=$(echo '${{ steps.get-deploy-pipeline.outputs.response }}' | jq -r '.[0].id')
                  echo "PIPELINE_ID=$PIPELINE_ID" >> $GITHUB_OUTPUT

            - name: Deploy Application
              id: deploy-application
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/pipelines/${{ steps.parse-deploy-pipeline-id.outputs.PIPELINE_ID }}/actions"
                  method: POST
                  token: ${{ steps.load-token.outputs.TOKEN }}
                  data: |
                      {
                          \"operation\": \"deploy\",
                          \"source_ref\": \"master\",
                          \"source_type\": \"branch\",
                          \"servers\": [${{ steps.parse-server-data.outputs.SERVER_ID }}]
                      }

            - name: Comment on PR with preview URL
              uses: actions/github-script@v6
              with:
                  script: |
                      const previewUrl = `http://${{ steps.parse-server-data.outputs.SERVER_IP }}:6969`;
                      const commentBody = `ðŸš€ Hello! Your preview application has been successfully deployed! âœ¨\n\nYou can access it here: [${previewUrl}](${previewUrl})\n\nHappy coding! ðŸ˜ŠðŸ’»`;
                      github.rest.issues.createComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: commentBody
                      });
