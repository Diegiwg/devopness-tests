name: CI - Cleanup Preview Resources

on:
    pull_request:
        types:
            - closed

jobs:
    cleanup-preview-resources:
        name: Cleanup Preview Resources
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Authenticate on Devopness
              uses: ./.github/actions/devopness-login
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  email: ${{ secrets.DEVOPNESS_EMAIL }}
                  password: ${{ secrets.DEVOPNESS_PASSWORD }}

            - name: Download Authentication Token
              uses: actions/download-artifact@v4
              with:
                  name: devopness-token

            - name: Set Authentication Token in Environment
              id: load-token
              run: echo "TOKEN=$(cat token.b64)" >> $GITHUB_OUTPUT

            - name: Remove Authentication Token Artifact
              uses: geekyeggo/delete-artifact@v5
              with:
                  name: devopness-token

            - name: Fetch Applications in Environment
              id: list-applications
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/environments/${{ vars.DEVOPNESS_ENVIRONMENT_ID }}/applications"
                  method: GET
                  token: ${{ steps.load-token.outputs.TOKEN }}

            - name: Extract Application ID
              run: |
                  echo '${{ steps.list-applications.outputs.response }}' > applications.json

            - name: Upload applications artifact
              uses: actions/upload-artifact@v4
              with:
                  name: applications.json
                  path: applications.json

            - name: Extract Application ID
              id: extract-application-id
              run: |
                  echo '${{ steps.list-applications.outputs.response }}' > applications.json
                  app_id=$(node .github/scripts/query-on-json.js applications.json 'filter("name", "pr-${{ github.event.number }}-preview", "==") and get("id")')

                  if [[ -n "$app_id" && "$app_id" != "null" ]]; then
                     echo "APPLICATION_ID=$app_id" >> $GITHUB_OUTPUT
                  else
                     echo "Application ID not found" >&2
                     exit 1
                  fi

            - name: Delete Preview Application
              if: steps.extract-application-id.outputs.APPLICATION_ID != ''
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/applications/${{ steps.extract-application-id.outputs.APPLICATION_ID }}"
                  method: DELETE
                  token: ${{ steps.load-token.outputs.TOKEN }}

            - name: Fetch Server Information
              id: get-server
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/servers/${{ vars.DEVOPNESS_SERVER_ID }}"
                  method: GET
                  token: ${{ steps.load-token.outputs.TOKEN }}

            - name: Extract Server Details
              id: parse-server-data
              run: |
                  json_response=$(printf '%s' "${{ steps.get-server.outputs.response }}")

                  SERVER_ID=$(echo "$json_response" | jq -r '.id')
                  echo "SERVER_ID=$SERVER_ID" >> $GITHUB_ENV

                  SERVER_IP=$(echo "$json_response" | jq -r '.ip_address')
                  echo "SERVER_IP=$SERVER_IP" >> $GITHUB_OUTPUT

            - name: Fetch Virtual Hosts in Environment
              id: list-virtual-hosts
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/environments/${{ vars.DEVOPNESS_ENVIRONMENT_ID }}/virtual-hosts"
                  method: GET
                  token: ${{ steps.load-token.outputs.TOKEN }}

            - name: Extract Virtual Host ID
              id: extract-vhost-id
              run: |
                  echo '${{ steps.list-virtual-hosts.outputs.response }}' > vhosts.json
                  vhost_id=$(node .github/scripts/query-on-json.js vhosts.json 'filter("name", "${{ steps.parse-server-data.outputs.SERVER_IP }}:6969", "==") and get("id")')

                  if [[ -n "$vhost_id" && "$vhost_id" != "null" ]]; then
                     echo "VIRTUAL_HOST_ID=$vhost_id" >> $GITHUB_OUTPUT
                  else
                     echo "Virtual Host ID not found" >&2
                     exit 1
                  fi

            - name: Delete Preview Virtual Host
              if: steps.extract-vhost-id.outputs.VIRTUAL_HOST_ID != ''
              uses: ./.github/actions/devopness-request
              with:
                  host: ${{ vars.DEVOPNESS_HOST }}
                  path: "/virtual-hosts/${{ steps.extract-vhost-id.outputs.VIRTUAL_HOST_ID }}"
                  method: DELETE
                  token: ${{ steps.load-token.outputs.TOKEN }}

            - name: Post Cleanup Comment on PR
              uses: actions/github-script@v6
              with:
                  script: |
                      const commentBody = `üóëÔ∏è The preview application and virtual host for this PR have been successfully deleted.`;
                      github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: commentBody
                      });
